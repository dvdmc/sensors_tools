frequency: 10.0 # Frequency of the sensor in Hz. -1 means that we are using a service instead of a timer
stride: 8 # Stride of the sensor for generating the pointcloud
max_depth: 8.0 # Maximum distance of the sensor
publish_freespace_point_cloud: true
origin_frame_id: "map" # Origin of the sensor will be published in this frame for the poses
sensor_frame_id: "camera_link" # Sensor messages will be published in this frame

save_inference: false
save_inference_path: '/media/david/datasets/dataset/'

# Config for bridge is in sensors_tools/bridge/{bridge_type}.py
bridge:
  bridge_type: 'airsim' # Source of the sensor. It can be 'airsim' or 'ros'
  data_types: ['rgb', 'depth', 'semantic', 'pose'] # Data types to be published. It can be 'rgb', 'depth', 'segmentation', 'pointcloud'
  width: 512
  height: 512
  semantic_config: [["wall", 0], ["Cube", 1], ["ceiling", 2],["door", 3], ["box", 4],["table",5],["computer", 6],["screen", 7],["cup", 8],["bottle", 9],["desk", 10],["person",11],["window",12],["cables", 13],["chair", 14],["plant", 15],["sofa", 16]]

# Config for inference is in sensors_tools/inference/{inference_type}.py
inference:
  model_name: "trident_open-seg" # Type of inference. It can be 'deterministic' or 'mcd'
  # weights_path: "/home/david/research/APbayDL/preliminaryBayesian/models/VOC12_7_classes_Resnet50_Drop03_AllBlocks_epoch_60"
  num_classes: 17
  labels_name: "ade20k"
  class_names: "wall,floor,ceiling,door,box,table,computer,screen,cup,bottle,desk,person,window,cables,chair,plant,sofa"